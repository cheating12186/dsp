 % DFT and IDFT using matrix method 
clear all; 
close all; 
clc; 
% Take input sequence 
x = input('Enter the sequence (e.g., [1 2 3 4]): '); 
N = length(x); 
% DFT matrix 
n = 0:N-1; 
k = n'; 
WN = exp(-1j*2*pi/N); 
DFT_matrix = WN .^ (k * n); 
% Compute DFT 
X = DFT_matrix * x.'; 
% IDFT matrix 
IDFT_matrix = (1/N) * exp(1j*2*pi/N) .^ (k * n); 
% Compute IDFT 
x_reconstructed = IDFT_matrix * X; 
% Plot original signal 
subplot(3,1,1); 
stem(0:N-1, x, 'filled'); 
title('Original Signal'); 
xlabel('n'); ylabel('x[n]'); 
% Plot DFT Magnitude and Phase 
subplot(3,1,2); 
stem(0:N-1, abs(X), 'filled'); 
title('DFT Magnitude'); 
xlabel('k'); ylabel('|X[k]|'); 
subplot(3,1,3); 
stem(0:N-1, angle(X), 'filled'); 
title('DFT Phase'); 
xlabel('k'); ylabel('âˆ X[k] (rad)'); 
figure; 
% Plot Reconstructed Signal 
stem(0:N-1, real(x_reconstructed), 'filled'); 
title('Reconstructed Signal using IDFT'); 
xlabel('n'); ylabel('x_{reconstructed}[n]'); 
